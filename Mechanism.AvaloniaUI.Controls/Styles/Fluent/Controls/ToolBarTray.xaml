<Styles xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:mech="https://github.com/Splitwirez/Mechanism-for-Avalonia">
  <Styles.Resources>
    <mech:ObjectToTemplateConverter x:Key="ObjectToTemplateConverter"/>
  </Styles.Resources>

  <Style Selector="mech|ToolBarTray">
    <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SystemControlBackgroundBaseMediumBrush}"/> 
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border x:Name="BackgroundBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
            <ItemsPresenter Name="PART_ItemsPresenter" Items="{TemplateBinding Items}" HorizontalAlignment="Stretch">
              <ItemsPresenter.ItemsPanel>
                <ItemsPanelTemplate>
                  <mech:ToolBarTrayPanel HorizontalAlignment="Stretch"/>
                </ItemsPanelTemplate>
              </ItemsPresenter.ItemsPanel>
            </ItemsPresenter>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="mech|ToolBar">
    <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundAltHighBrush}"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="MinWidth" Value="75"/>
    <Setter Property="Padding" Value="4"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Border x:Name="BackgroundBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="2">
          <DockPanel Margin="{TemplateBinding Padding}">
            <Thumb x:Name="PART_GripThumb" VerticalAlignment="Stretch" IsVisible="{Binding !$parent[mech:ToolBarTray].IsLocked}" Cursor="SizeAll" DockPanel.Dock="Left"/>
            <ContentPresenter x:Name="PART_ContentPresenter"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Margin="0"
                                  Padding="0"/>
          </DockPanel>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>
  <Style Selector="mech|ToolBar /template/ Border#BackgroundBorder">
    <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
  </Style>

  <Style Selector="mech|ToolBar /template/ Thumb#PART_GripThumb">
    <Setter Property="Template">
      <ControlTemplate>
        <Panel Background="#01000000">
          <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="4" Margin="3,0">
            <Ellipse Width="3" Height="3" Fill="{DynamicResource ListBoxDisabledForegroundThemeBrush}" StrokeThickness="0"/>
            <Ellipse Width="3" Height="3" Fill="{DynamicResource ListBoxDisabledForegroundThemeBrush}" StrokeThickness="0"/>
            <Ellipse Width="3" Height="3" Fill="{DynamicResource ListBoxDisabledForegroundThemeBrush}" StrokeThickness="0"/>
          </StackPanel>
        </Panel>
      </ControlTemplate>
    </Setter>
  </Style>

  <Style Selector="mech|ToolBarTray > ItemsControl,
                  mech|ToolBarTray > mech|CommandBar,
                  mech|ToolBarTray > Menu,
                  mech|ToolBar > ItemsControl,
                  mech|ToolBar > mech|CommandBar,
                  mech|ToolBar > Menu">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Margin" Value="0"/>
  </Style>
  <Style Selector="mech|ToolBarTray > ItemsControl,
                   mech|ToolBar > ItemsControl">
    <Setter Property="Template">
      <ControlTemplate>
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
          <mech:OverflowFlyoutItemsPresenter x:Name="PART_ItemsPresenter" Items="{TemplateBinding Items}" ItemTemplate="{TemplateBinding ItemTemplate}"/>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>
  <Style Selector="mech|ToolBarTray > Menu,
                   mech|ToolBar > Menu">
    <Setter Property="Template">
      <ControlTemplate>
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
          <mech:OverflowFlyoutItemsPresenter x:Name="PART_ItemsPresenter" Items="{TemplateBinding Items}" ItemTemplate="{TemplateBinding ItemTemplate}" KeyboardNavigation.TabNavigation="Continue"/>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>
  <Style Selector="mech|ToolBarTray > Menu > MenuItem,
                   mech|ToolBar > Menu > MenuItem">
    <Setter Property="Padding" Value="{DynamicResource MenuFlyoutItemThemePaddingNarrow}" />
  </Style>




  <Style Selector="mech|ToolBarTray > ItemsControl > :is(Button),
                   mech|ToolBar > ItemsControl > ContentPresenter > :is(Button)">
    <Setter Property="mech:AttachedIcon.IconGap" Value="4" />
    <Setter Property="BorderThickness" Value="{DynamicResource ThemeBorderThickness}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="HorizontalAlignment" Value="Stretch"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Border x:Name="BackgroundBorder" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
          <StackPanel Orientation="Horizontal" Spacing="{Binding (mech:AttachedIcon.IconGap), RelativeSource={RelativeSource Mode=TemplatedParent}}">
            <TemplatedControl x:Name="PART_IconPresenter" Template="{Binding (mech:AttachedIcon.Icon), Converter={StaticResource ObjectToTemplateConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextBlock.Foreground="{TemplateBinding Foreground}" Background="Transparent" IsVisible="{Binding (mech:AttachedIcon.Icon), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ValueToIsNullBoolConverter}}"/>
            <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" TextBlock.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Left" VerticalAlignment="Center" Background="Transparent" IsVisible="{TemplateBinding Content, Converter={StaticResource ValueToIsNullBoolConverter}}"/>
          </StackPanel>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>
  <Style Selector="mech|ToolBarTray > ItemsControl > :is(Button):pointerover /template/ Border#BackgroundBorder,
                   mech|ToolBar > ItemsControl > ContentPresenter > :is(Button):pointerover /template/ Border#BackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPointerOver}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
  </Style>
  <Style Selector="mech|ToolBarTray > ItemsControl > :is(Button):pressed /template/ Border#BackgroundBorder,
                   mech|ToolBar > ItemsControl > ContentPresenter > :is(Button):pressed /template/ Border#BackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPressed}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundPressed}" />
  </Style>
  <Style Selector="mech|ToolBarTray > ItemsControl > ToggleButton:checked /template/ Border#BackgroundBorder,
                   mech|ToolBar > ItemsControl > ContentPresenter > ToggleButton:checked /template/ Border#BackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundChecked}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushChecked}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundChecked}" />
  </Style>
  <Style Selector="mech|ToolBarTray > ItemsControl > ToggleButton:checked:pointerover /template/ Border#BackgroundBorder,
                   mech|ToolBar > ItemsControl > ContentPresenter > ToggleButton:checked:pointerover /template/ Border#BackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPointerOver}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedPointerOver}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedPointerOver}" />
  </Style>
  <Style Selector="mech|ToolBarTray > ItemsControl > ToggleButton:checked:pressed /template/ Border#BackgroundBorder,
                   mech|ToolBar > ItemsControl > ContentPresenter > ToggleButton:checked:pressed /template/ Border#BackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPressed}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedPressed}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedPressed}" />
  </Style>
  <Style Selector="mech|ToolBarTray > ItemsControl > ToggleButton:checked:disabled /template/ Border#BackgroundBorder,
                   mech|ToolBar > ItemsControl > ContentPresenter > ToggleButton:checked:disabled /template/ Border#BackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedDisabled}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedDisabled}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedDisabled}" />
  </Style>
  <Style Selector="mech|ToolBarTray > ItemsControl > ToggleButton:disabled /template/ Border#BackgroundBorder,
                   mech|ToolBar > ItemsControl > ContentPresenter > ToggleButton:disabled /template/ Border#BackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushDisabled}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundDisabled}" />
  </Style>
</Styles>
