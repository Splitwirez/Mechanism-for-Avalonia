<Styles xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:mecore="clr-namespace:Mechanism.AvaloniaUI.Core;assembly=Mechanism.AvaloniaUI.Core"
             xmlns:meconv="clr-namespace:Mechanism.AvaloniaUI.Converters;assembly=Mechanism.AvaloniaUI.Core"
             xmlns:mectrl="clr-namespace:Mechanism.AvaloniaUI.Controls;assembly=Mechanism.AvaloniaUI.Controls"
             xmlns:metb="clr-namespace:Mechanism.AvaloniaUI.Controls.ToolBar;assembly=Mechanism.AvaloniaUI.Controls">
  <Style Selector="metb|ToolBar">
    <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundAltHighBrush}"/> 
    <Setter Property="MinWidth" Value="75"/>
    <Setter Property="BaseWidth" Value="16"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource OverlayCornerRadius}" Margin="2">
          <DockPanel>
            <Thumb x:Name="PART_GripThumb" VerticalAlignment="Stretch" IsVisible="{Binding !$parent[metb:ToolBarTray].IsLocked}" Cursor="SizeAll" DockPanel.Dock="Left">
              <Thumb.Template>
                <ControlTemplate>
                  <Panel Background="#01000000">
                    <!--Border BorderThickness="1,0,0,1" CornerRadius="0,0,0,3" BorderBrush="{Binding $parent[metb:ToolBar].BorderBrush}" Margin="0,5,0,0"/-->
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="4" Margin="5,3,3,3">
                      <Ellipse Width="3" Height="3" Fill="{DynamicResource ListBoxDisabledForegroundThemeBrush}" StrokeThickness="0"/>
                      <Ellipse Width="3" Height="3" Fill="{DynamicResource ListBoxDisabledForegroundThemeBrush}" StrokeThickness="0"/>
                      <Ellipse Width="3" Height="3" Fill="{DynamicResource ListBoxDisabledForegroundThemeBrush}" StrokeThickness="0"/>
                    </StackPanel>
                  </Panel>
                </ControlTemplate>
              </Thumb.Template>
            </Thumb>
            <Panel>
              <!--DockPanel Height="1" VerticalAlignment="Bottom">
                <Rectangle Width="5" IsVisible="{Binding $parent[metb:ToolBarTray].IsLocked}" DockPanel.Dock="Left"/>
                <Rectangle Width="5" DockPanel.Dock="Right"/>
                <Rectangle Fill="{TemplateBinding BorderBrush}"/>
              </DockPanel-->
              <mectrl:OverflowFlyoutItemsControl x:Name="PART_OverflowItemsControl" IsVisible="{TemplateBinding UseOverflow}" ItemsPanel="{TemplateBinding ItemsPanel}" IsFlyoutOpen="{Binding $parent[metb:ToolBar].IsFlyoutOpen, Mode=TwoWay}" ForceDesiredSize="True">
                <mectrl:OverflowFlyoutItemsControl.Template>
                  <ControlTemplate>
                    <Panel Name="RootPanel">
                      <DockPanel Margin="{TemplateBinding Padding}">
                        <ToggleButton x:Name="PART_FlyoutToggleButton" Padding="8,0" Margin="4" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsVisible="{TemplateBinding HasFlyoutItems}" IsChecked="{Binding $parent[mectrl:OverflowFlyoutItemsControl].IsFlyoutOpen, Mode=TwoWay}" Background="Transparent" DockPanel.Dock="Right">
                          <StackPanel Orientation="Horizontal" Spacing="4" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Ellipse Width="3" Height="3" Fill="{Binding $parent[ToggleButton].Foreground}" StrokeThickness="0"/>
                            <Ellipse Width="3" Height="3" Fill="{Binding $parent[ToggleButton].Foreground}" StrokeThickness="0"/>
                            <Ellipse Width="3" Height="3" Fill="{Binding $parent[ToggleButton].Foreground}" StrokeThickness="0"/>
                          </StackPanel>
                        </ToggleButton>
                        <ItemsControl x:Name="PART_VisibleItemsPresenter" Items="{TemplateBinding VisibleItems}">
                          <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                              <mectrl:AlignableStackPanel Spacing="3" Orientation="Horizontal" ClipToBounds="True" HorizontalChildrenAlignment="Left" />
                            </ItemsPanelTemplate>
                          </ItemsControl.ItemsPanel>
                        </ItemsControl>
                      </DockPanel>
                      <Popup x:Name="PART_Flyout" PlacementMode="Bottom" PlacementTarget="{Binding ElementName=PART_FlyoutToggleButton}" IsOpen="{Binding $parent[mectrl:OverflowFlyoutItemsControl].IsFlyoutOpen, Mode=TwoWay}" MinHeight="{TemplateBinding MinHeight}" StaysOpen="False">
                        <Border Background="{DynamicResource ComboBoxDropDownBackground}" BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}" BorderThickness="{DynamicResource ComboBoxDropdownBorderThickness}" CornerRadius="3" Padding="-8,0,0,0">
                          <ItemsControl x:Name="PART_FlyoutItemsPresenter" Items="{TemplateBinding FlyoutItems}" ItemsPanel="{TemplateBinding FlyoutItemsPanel}"/>
                        </Border>
                      </Popup>
                    </Panel>
                  </ControlTemplate>
                </mectrl:OverflowFlyoutItemsControl.Template>
              </mectrl:OverflowFlyoutItemsControl>
              <ItemsPresenter x:Name="RegularItemsPresenter" ItemsPanel="{TemplateBinding ItemsPanel}" IsVisible="{Binding !UseOverflow, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"/>
            </Panel>
          </DockPanel>
        </Border>
      </ControlTemplate>
    </Setter>
    <Setter Property="ItemsPanel">
      <ItemsPanelTemplate>
        <StackPanel Orientation="Horizontal"/>
      </ItemsPanelTemplate>
    </Setter>
  </Style>
  <Style Selector="metb|ToolBar[UseOverflow=True] /template/ mectrl|OverflowFlyoutItemsControl#PART_OverflowItemsControl">
    <Setter Property="Items" Value="{Binding Items, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
  </Style>
  <Style Selector="metb|ToolBar[UseOverflow=False] /template/ ItemsPresenter#RegularItemsPresenter">
    <Setter Property="Items" Value="{Binding Items, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
  </Style>
  <!--Style Selector="metb|ToolBar[UseOverflow=False] > Menu">
    <Setter Property="Template">
      <ControlTemplate>
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
          <mectrl:OverflowFlyoutItemsControl Items="{TemplateBinding Items}" ItemTemplate="{TemplateBinding ItemTemplate}" KeyboardNavigation.TabNavigation="Continue"/>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style-->
  <Style Selector="metb|ToolBar > :is(Button)">
    <Setter Property="Margin" Value="4"/>
    <Setter Property="BorderThickness" Value="{DynamicResource ThemeBorderThickness}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Border x:Name="BackgroundBorder" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
          <StackPanel Orientation="Horizontal" Spacing="4">
            <TemplatedControl x:Name="PART_IconPresenter" Template="{Binding (mecore:AttachedIcon.Icon), RelativeSource={RelativeSource Mode=TemplatedParent}}" TextBlock.Foreground="{TemplateBinding Foreground}" Background="Transparent"/>
            <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" TextBlock.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Left" VerticalAlignment="Center" Background="Transparent"/>
          </StackPanel>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>
  <Style Selector="metb|ToolBar > :is(Button):pointerover /template/ Border#BackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPointerOver}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
  </Style>
  <Style Selector="metb|ToolBar > :is(Button):pressed /template/ Border#BackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPressed}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundPressed}" />
  </Style>
  <Style Selector="metb|ToolBar > ToggleButton:checked /template/ Border#BackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundChecked}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushChecked}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundChecked}" />
  </Style>
  <Style Selector="metb|ToolBar > ToggleButton:checked:pointerover /template/ Border#BackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPointerOver}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedPointerOver}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedPointerOver}" />
  </Style>
  <Style Selector="metb|ToolBar > ToggleButton:checked:pressed /template/ Border#BackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPressed}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedPressed}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedPressed}" />
  </Style>
  <Style Selector="metb|ToolBar > ToggleButton:checked:disabled /template/ Border#BackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedDisabled}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedDisabled}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedDisabled}" />
  </Style>
  <Style Selector="metb|ToolBar > ToggleButton:disabled /template/ Border#BackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushDisabled}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundDisabled}" />
  </Style>

  <Style Selector="metb|ToolBarTray">
    <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ItemsPresenter Name="PART_ItemsPresenter" Items="{TemplateBinding Items}" HorizontalAlignment="Stretch">
              <ItemsPresenter.ItemsPanel>
                <ItemsPanelTemplate>
                  <metb:ToolBarTrayPanel HorizontalAlignment="Stretch"/>
                </ItemsPanelTemplate>
              </ItemsPresenter.ItemsPanel>
            </ItemsPresenter>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--Style Selector="metb|ToolBarTrayItem">
    <Setter Property="Template">
      <ControlTemplate>
        <DockPanel>
          <Thumb x:Name="PART_GripThumb" Width="20" MinHeight="20" VerticalAlignment="Stretch" Background="Red" DockPanel.Dock="Left">
            <Thumb.Template>
              <ControlTemplate>
                <Rectangle Fill="{TemplateBinding Background}"/>
              </ControlTemplate>
            </Thumb.Template>
          </Thumb>
          <ContentPresenter Content="{TemplateBinding Content}"/>
        </DockPanel>
      </ControlTemplate>
    </Setter>
  </Style-->
</Styles>
