<Styles xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:mech="https://github.com/Splitwirez/Mechanism-for-Avalonia">
  <Style Selector="mech|OverflowFlyoutItemsPresenter">
    <Setter Property="HorizontalAlignment" Value="Stretch"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Panel>
          <DockPanel HorizontalAlignment="Stretch">
            <Panel Width="45" DockPanel.Dock="Right" ZIndex="2">
              <ToggleButton x:Name="FlyoutToggleButton" Margin="4,0,0,0" IsVisible="{TemplateBinding HasFlyoutItems}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsChecked="{Binding IsFlyoutOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}">
                  <StackPanel Orientation="Horizontal" Spacing="4" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Ellipse Width="3" Height="3" Fill="{Binding $parent[ToggleButton].Foreground}" StrokeThickness="0"/>
                    <Ellipse Width="3" Height="3" Fill="{Binding $parent[ToggleButton].Foreground}" StrokeThickness="0"/>
                    <Ellipse Width="3" Height="3" Fill="{Binding $parent[ToggleButton].Foreground}" StrokeThickness="0"/>
                  </StackPanel>
              </ToggleButton>
            </Panel>
            <mech:AlignableStackPanel x:Name="PART_MainItemsPanel" Orientation="Horizontal" HorizontalChildrenAlignment="{Binding $parent[mech:CommandBar].HorizontalItemsAlignment}"/>
          </DockPanel>
          <Popup PlacementTarget="{Binding #FlyoutToggleButton}" PlacementMode="Left" StaysOpen="False"
                 IsOpen="{Binding IsFlyoutOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                 HorizontalOffset="{Binding #FlyoutToggleButton.Bounds.Width}"
                 VerticalOffset="{Binding #FlyoutToggleButton.Bounds.Height}">
            <Border Background="{DynamicResource ComboBoxDropDownBackground}" BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}" BorderThickness="{DynamicResource ComboBoxDropdownBorderThickness}" CornerRadius="{DynamicResource OverlayCornerRadius}" Padding="{DynamicResource MenuFlyoutPresenterThemePadding}">
              <StackPanel x:Name="PART_FlyoutItemsPanel" Orientation="Vertical"/>
            </Border>
          </Popup>
        </Panel>
      </ControlTemplate>
    </Setter>
  </Style>
  <Style Selector="mech|OverflowFlyoutItemsPresenter /template/ ToggleButton#FlyoutToggleButton:not(:pointerover):not(:pressed) /template/ ContentPresenter#PART_ContentPresenter">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
  </Style>
  <Style Selector="mech|OverflowFlyoutItemsPresenter /template/ ToggleButton#FlyoutToggleButton:checked /template/ ContentPresenter#PART_ContentPresenter">
    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPressed}" />
  </Style>
</Styles>
