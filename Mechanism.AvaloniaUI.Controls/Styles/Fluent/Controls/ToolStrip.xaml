<Styles xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:mecore="clr-namespace:Mechanism.AvaloniaUI.Core;assembly=Mechanism.AvaloniaUI.Core"
             xmlns:meconv="clr-namespace:Mechanism.AvaloniaUI.Converters;assembly=Mechanism.AvaloniaUI.Core"
             xmlns:mectrl="clr-namespace:Mechanism.AvaloniaUI.Controls;assembly=Mechanism.AvaloniaUI.Controls"
             xmlns:mets="clr-namespace:Mechanism.AvaloniaUI.Controls.ToolStrip;assembly=Mechanism.AvaloniaUI.Controls"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity">
  <Styles.Resources>
    <mecore:CornerCurvesToCornerRadiiConverter x:Key="CornerCurvesToCornerRadiiConverter"/>
    <ControlTemplate x:Key="EmbeddedFlyoutButtonTemplate">
      <Panel x:Name="PART_ButtonArea">
        <Border x:Name="BackgroundBorder" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource Mode=TemplatedParent}}">
          <Path Data="M 0 0 L 4 4 L 0 8 Z" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{Binding Padding, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        </Border>
        <Popup x:Name="PART_Flyout" IsOpen="{Binding IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" StaysOpen="False" MinWidth="1" MinHeight="1" PlacementMode="Right" PlacementTarget="{Binding #BackgroundBorder}">
          <ContentPresenter Name="PART_FlyoutContentPresenter" Background="{DynamicResource ThemeBackgroundBrush}" BorderBrush="{DynamicResource ThemeBorderMidBrush}" BorderThickness="{DynamicResource ThemeBorderThickness}" ContentTemplate="{Binding FlyoutContentTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" Content="{Binding FlyoutContent, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextBlock.Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
        </Popup>
      </Panel>
    </ControlTemplate>

    <!--ControlTemplate x:Key="ButtonToolStripItemTemplate" TargetType="{x:Type TemplatedControl}">
      <Button x:Name="ToolStripButton" Classes="ToolStrip" DataContext="{TemplateBinding DataContext}">
        <!-Command="{Binding Command, FallbackValue={x:Null}}" CommandParameter="{Binding CommandParameter}"->
        <!-i:Interaction.Behaviors>
          <mets:ButtonCommandBehavior TargetItem="{Binding DataContext, ElementName=ToolStripButton}"/>
          <!-Command="{Binding DataContext.Command, ElementName=ToolStripButton}" CommandParameter="{Binding DataContext.CommandParameter, ElementName=ToolStripButton}"->
        </i:Interaction.Behaviors->
        <TemplatedControl Template="{Binding Icon}"/>
      </Button>
    </ControlTemplate-->
  </Styles.Resources>
  <Style Selector="mets|ToolStrip">
    <Setter Property="MinHeight" Value="40"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Panel>
          <ItemsPresenter x:Name="PART_ItemsPresenter" Items="{TemplateBinding Items}" IsVisible="False"/>
          <ItemsControl x:Name="PART_CurrentItemsItemsControl" Items="{TemplateBinding CurrentItems}" Background="#01000000">
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <!--StackPanel Orientation="Horizontal" Spacing="6" Margin="7,0"/-->
                <mets:ToolStripItemsPanel HorizontalAlignment="Stretch" Spacing="6" Margin="7,0"/>
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.DataTemplates>
              <DataTemplate DataType="{x:Type mets:ToolStripFlexibleSpaceReference}">
                <Panel Tag="FLEXIBLE_SPACE">
                  <i:Interaction.Behaviors>
                    <mets:ToolStripItemPointerOverBehavior Target="{Binding}" Owner="{Binding $parent[mets:ToolStrip]}"/>
                  </i:Interaction.Behaviors>
                  <DockPanel VerticalAlignment="Stretch">
                    <Panel IsVisible="{Binding IsCustomizing, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mets:ToolStrip}}}" DockPanel.Dock="Bottom">
                      <TextBlock Text="{Binding TargetItem.DisplayName}" TextAlignment="Center" IsVisible="{Binding ShowLabels, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mets:ToolStrip}}}"/>
                    </Panel>
                    <TemplatedControl x:Name="ItemTemplatedControl" DataContext="{Binding TargetItem}" Template="{Binding Template}"/>
                  </DockPanel>
                  <Thumb Classes="DragThumb" IsVisible="{Binding IsCustomizing, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mets:ToolStrip}}}">
                    <i:Interaction.Behaviors>
                      <mets:MoveOrRemoveFromToolStripBehavior Target="{Binding}" Owner="{Binding $parent[mets:ToolStrip]}"/>
                    </i:Interaction.Behaviors>
                  </Thumb>
                </Panel>
              </DataTemplate>
              <DataTemplate DataType="{x:Type mets:ToolStripItemReference}">
                <Panel VerticalAlignment="Stretch">
                  <i:Interaction.Behaviors>
                    <mets:ToolStripItemPointerOverBehavior Target="{Binding}" Owner="{Binding $parent[mets:ToolStrip]}"/>
                  </i:Interaction.Behaviors>
                  <DockPanel VerticalAlignment="Stretch">
                    <TextBlock Text="{Binding TargetItem.DisplayName}" TextAlignment="Center" IsVisible="{Binding ShowLabels, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mets:ToolStrip}}}" DockPanel.Dock="Bottom"/>
                    <TemplatedControl x:Name="ItemTemplatedControl" DataContext="{Binding TargetItem}" Template="{Binding Template}"/>
                  </DockPanel>
                  <Thumb Classes="DragThumb" IsVisible="{Binding IsCustomizing, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mets:ToolStrip}}}">
                    <i:Interaction.Behaviors>
                      <mets:MoveOrRemoveFromToolStripBehavior Target="{Binding}" Owner="{Binding $parent[mets:ToolStrip]}"/>
                    <!--TargetItem="{Binding DataContext, ElementName=ItemTemplatedControl}"-->
                    </i:Interaction.Behaviors>
                  </Thumb>
                </Panel>
              </DataTemplate>
            </ItemsControl.DataTemplates>
          </ItemsControl>
          <Popup x:Name="PART_CustomizeFlyout" IsOpen="{TemplateBinding IsCustomizing}" StaysOpen="True" Width="{Binding Bounds.Width, RelativeSource={RelativeSource Mode=TemplatedParent}}" MinHeight="10">
            <Border Background="{DynamicResource ComboBoxDropDownBackground}" BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}" BorderThickness="{DynamicResource ComboBoxDropdownBorderThickness}" CornerRadius="3">
              <StackPanel Orientation="Vertical" Margin="20">
                <TextBlock Text="Drag your favorite items into the Toolstrip..." Margin="0,0,0,10"/>
                <ItemsControl Items="{TemplateBinding AvailableItems}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <WrapPanel/>
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                  <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type mets:ToolStripItemReference}">
                      <Panel VerticalAlignment="Stretch" Margin="0,0,20,20">
                        <DockPanel VerticalAlignment="Stretch">
                          <TextBlock Text="{Binding TargetItem.DisplayName}" TextAlignment="Center" DockPanel.Dock="Bottom"/>
                          <TemplatedControl x:Name="ItemTemplatedControl" DataContext="{Binding TargetItem}" Template="{Binding Template}"/>
                        </DockPanel>
                        <Thumb Classes="DragThumb" IsVisible="{Binding IsCustomizing, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mets:ToolStrip}}}">
                          <i:Interaction.Behaviors>
                            <mets:AddToToolStripBehavior TargetItem="{Binding DataContext, ElementName=ItemTemplatedControl}" Owner="{Binding $parent[mets:ToolStrip]}"/>
                          </i:Interaction.Behaviors>
                        </Thumb>
                      </Panel>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
                <TextBlock Text="...or drag the default set into the Toolstrip." Margin="0,20,0,10"/>
                <Panel>
                  <ItemsControl x:Name="PART_DefaultItemsItemsControl" Items="{TemplateBinding DefaultItems}" IsHitTestVisible="False">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <mets:ToolStripItemsPanel HorizontalAlignment="Stretch" Spacing="6" Margin="7,0"/>
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.DataTemplates>
                      <DataTemplate DataType="{x:Type mets:ToolStripFlexibleSpaceReference}">
                        <Panel>
                          <DockPanel VerticalAlignment="Stretch">
                            <TextBlock Text="{Binding TargetItem.DisplayName}" TextAlignment="Center" DockPanel.Dock="Bottom"/>
                            <TemplatedControl x:Name="ItemTemplatedControl" DataContext="{Binding TargetItem}" Template="{Binding Template}"/>
                          </DockPanel>
                        </Panel>
                      </DataTemplate>
                      <DataTemplate DataType="{x:Type mets:ToolStripItemReference}">
                        <Panel VerticalAlignment="Stretch">
                          <DockPanel VerticalAlignment="Stretch">
                            <TextBlock Text="{Binding TargetItem.DisplayName}" TextAlignment="Center" DockPanel.Dock="Bottom"/>
                            <TemplatedControl x:Name="ItemTemplatedControl" DataContext="{Binding TargetItem}" Template="{Binding Template}"/>
                          </DockPanel>
                        </Panel>
                      </DataTemplate>
                    </ItemsControl.DataTemplates>
                  </ItemsControl>
                  <Thumb x:Name="PART_DefaultItemsThumb" Classes="DragThumb"/>
                </Panel>
                <Rectangle Margin="4,20" Height="2" Fill="{DynamicResource SystemControlForegroundBaseHighBrush}" Opacity="0.5"/>
                <DockPanel LastChildFill="False">
                  <ToggleButton Content="Done" IsChecked="{Binding !IsCustomizing, RelativeSource={RelativeSource Mode=TemplatedParent}}" DockPanel.Dock="Right"/>
                </DockPanel>
              </StackPanel>
            </Border>
          </Popup>
        </Panel>
      </ControlTemplate>
    </Setter>
  </Style>
  <Style Selector="mets|ToolStrip[IsCustomizing=True] Thumb.DragThumb">
    <Setter Property="HorizontalAlignment" Value="Stretch"/>
    <Setter Property="VerticalAlignment" Value="Stretch"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Border Background="#01000000"/>
      </ControlTemplate>
    </Setter>
  </Style>
  <Style Selector="mets|ToolStrip[IsCustomizing=True] /template/ ItemsControl#PART_CurrentItemsItemsControl">
    <!--Style.Animations>
      <Animation Duration="0:0:1" RepeatCount="INFINITE" PlaybackDirection="Alternate">
        <KeyFrame Cue="0%">
          <Setter Property="Opacity" Value="1.0"/>
        </KeyFrame>
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="0.75"/>
        </KeyFrame>
      </Animation>
    </Style.Animations-->
    <Setter Property="Background" Value="#01000000"/>
  </Style>
  <Style Selector=":is(Button).ToolStrip">
    <Setter Property="Width" Value="40"/>
    <Setter Property="Height" Value="30"/>
  </Style>

  <!--Style Selector=":is(Button).ToolStrip:pointerover /template/ ContentPresenter#PART_ContentPresenter">
    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPointerOver}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
  </Style>
  
  <Style Selector=":is(Button).ToolStrip:pressed  /template/ ContentPresenter#PART_ContentPresenter">
    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPressed}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundPressed}" />
  </Style>
  
  <Style Selector=":is(Button).ToolStrip:disabled /template/ ContentPresenter#PART_ContentPresenter">
    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushDisabled}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundDisabled}" />
</Style-->
  <Style Selector="mets|ButtonToolStripItem">
    <Setter Property="Template">
      <ControlTemplate>
        <Button x:Name="ToolStripButton" Classes="ToolStrip" DataContext="{TemplateBinding DataContext}" Command="{Binding Command}" CommandParameter="{Binding CommandParameter}" HorizontalAlignment="Center" MinWidth="40" MinHeight="30">
          <!--Command="{Binding Command, FallbackValue={x:Null}}" CommandParameter="{Binding CommandParameter}"-->
          <!--i:Interaction.Behaviors>
            <mets:ButtonCommandBehavior TargetItem="{Binding DataContext, ElementName=ToolStripButton}"/>
            <!-Command="{Binding DataContext.Command, ElementName=ToolStripButton}" CommandParameter="{Binding DataContext.CommandParameter, ElementName=ToolStripButton}"->
          </i:Interaction.Behaviors-->
          <TemplatedControl Template="{Binding Path=(mecore:AttachedIcon.Icon)}"/>
        </Button>
      </ControlTemplate>
    </Setter>
  </Style>


  <Style Selector="mets|SegmentedControlToolStripItem">
    <Setter Property="Template">
      <ControlTemplate>
        <Panel DataContext="{TemplateBinding DataContext}">
          <ScrollViewer Name="PART_ScrollViewer" IsVisible="False"/>
          <ItemsPresenter Name="PART_ItemsPresenter" Items="{Binding Items}" ItemsPanel="{Binding ItemsPanel}" ItemTemplate="{Binding ItemTemplate}"/>
          <!--  Margin="{TemplateBinding Padding}" VirtualizationMode="{TemplateBinding VirtualizationMode}"-->
          <!--TemplatedControl Template="{Binding Path=(mecore:AttachedIcon.Icon)}"/>
          </Button-->
        </Panel>
      </ControlTemplate>
    </Setter>
    <Setter Property="ItemTemplate">
      <DataTemplate>
        <!--StackPanel x:Name="RootStackPanel" Orientation="Vertical" Spacing="4" MinWidth="40">
          <Border x:Name="BackgroundBorder" HorizontalAlignment="Stretch" MinHeight="30"
          CornerRadius="{Binding Path=(mecore:CornerCurves.CornerCurves), ElementName=RootStackPanel, Converter={StaticResource CornerCurvesToCornerRadiiConverter}, ConverterParameter='3;0'}">
          <!-Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" ->
              <TemplatedControl x:Name="PART_IconPresenter" Template="{Binding Icon}" Background="Transparent"/>
          </Border>
          <ContentPresenter x:Name="PART_ContentPresenter" Content="{Binding DisplayName}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
          <!-ContentTemplate="{TemplateBinding ContentTemplate}" 
          <!- IsVisible="{Binding ShowLabels, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mets:ToolStrip}}}"->
        </StackPanel-->
        <mets:SegmentedControlToolStripItemSegmentPresenter mecore:CornerCurves.CornerCurves="{Binding $parent[ContentPresenter].(mecore:CornerCurves.CornerCurves)}"/>
      </DataTemplate>
    </Setter>
  </Style>
  

  <Style Selector="mets|SegmentedControlToolStripItemSegmentPresenter">
    <Setter Property="DisplayName" Value="{Binding DisplayName}"/>
    <Setter Property="mecore:AttachedIcon.Icon" Value="{Binding Path=(mecore:AttachedIcon.Icon)}"/>
    <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThemeThickness}" />
    <Setter Property="Template">
      <ControlTemplate>
        <DockPanel>
          <TextBlock Text="{TemplateBinding DisplayName}" TextBlock.Foreground="{TemplateBinding Foreground}" TextAlignment="Center" IsVisible="{Binding ShowLabels, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mets:ToolStrip}}}" DockPanel.Dock="Bottom"/>
          <Button x:Name="PART_SegmentPresenterButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" MinWidth="40" MinHeight="30" Command="{Binding Command}" CommandParameter="{Binding CommandParameter}">
          <!--  GroupName="{Binding GroupName, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mets:SegmentedControlToolStripItem}}, Mode=OneWay}"-->
            <Button.Template>
              <ControlTemplate>
                  <ContentPresenter x:Name="PART_ContentPresenter"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Content="{TemplateBinding Content}"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    CornerRadius="{Binding Path=(mecore:CornerCurves.CornerCurves), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mets:SegmentedControlToolStripItemSegmentPresenter}}, Converter={StaticResource CornerCurvesToCornerRadiiConverter}, ConverterParameter='3;0'}"/>
                </ControlTemplate>
              </Button.Template>
              <TemplatedControl x:Name="PART_IconPresenter" Template="{Binding (mecore:AttachedIcon.Icon), RelativeSource={RelativeSource Mode=TemplatedParent}}" TextBlock.Foreground="{TemplateBinding Foreground}" Background="Transparent"/>
          </Button>
        </DockPanel>
      </ControlTemplate>
    </Setter>
  </Style>
  <Style Selector="mets|SegmentedControlToolStripItemSegmentPresenter[IsSelected=True] /template/ Button#PART_SegmentPresenterButton">
    <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundChecked}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushChecked}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundChecked}" />
  </Style>
  <Style Selector="mets|SegmentedControlToolStripItemSegmentPresenter[IsSelected=False] /template/ Button#PART_SegmentPresenterButton:pointerover">
    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPointerOver}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
  </Style>
  <Style Selector="mets|SegmentedControlToolStripItemSegmentPresenter[IsSelected=False] /template/ Button#PART_SegmentPresenterButton:pressed">
    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPressed}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundPressed}" />
  </Style>

  <Style Selector="mets|FlexibleSpaceToolStripItem">
    <Setter Property="Template">
      <ControlTemplate>
        <Panel Height="24">
          <DockPanel IsVisible="{Binding IsCustomizing, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mets:ToolStrip}}}" Margin="0,0,12,0" Opacity="0.5">
            <Path Data="M 6 0 L 0 6 L 6 12" Stroke="{DynamicResource SystemControlForegroundBaseHighBrush}" StrokeThickness="2" Width="6" Height="12" DockPanel.Dock="Left"/>
            <Path Data="M 0 0 L 6 6 L 0 12" Stroke="{DynamicResource SystemControlForegroundBaseHighBrush}" StrokeThickness="2" Width="6" Height="12" DockPanel.Dock="Right"/>
            <Rectangle VerticalAlignment="Center" Height="2" Fill="{DynamicResource SystemControlForegroundBaseHighBrush}" Margin="-5,0" />
          </DockPanel>
        </Panel>
      </ControlTemplate>
    </Setter>
  </Style>
</Styles>
