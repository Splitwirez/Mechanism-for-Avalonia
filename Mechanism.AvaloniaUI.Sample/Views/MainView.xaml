<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:v="clr-namespace:Mechanism.AvaloniaUI.Sample.Views;assembly=Mechanism.AvaloniaUI.Sample"
             xmlns:vm="clr-namespace:Mechanism.AvaloniaUI.Sample.ViewModels"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Mechanism.AvaloniaUI.Sample.Views.MainView">
    <UserControl.DataContext>
        <vm:MainViewModel/>
    </UserControl.DataContext>
    <DockPanel>
        <Border Background="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" DockPanel.Dock="Top" Height="32">
            <Panel>
                <Button HorizontalAlignment="Left" IsVisible="{Binding CanGoHome}" Command="{Binding GoHome}" Width="50" VerticalAlignment="Stretch" Margin="2">
                    <Path Data="M 0 5 L 5 0 L 7 0 L 2 5 L 12 5 L 12 7 L 2 7 L 7 12 L 5 12 Z" Fill="{Binding $parent[Button].Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Button>
                <!--StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Spacing="15">
                    <TextBlock Text="Lights" VerticalAlignment="Center"/-->
                <ToggleSwitch x:Name="LightsToggleSwitch" HorizontalAlignment="Right" IsChecked="True" OnContent="Lights on" OffContent="Lights off" Margin="5,0"/>
                <!--/StackPanel-->
                <TextBlock Text="{Binding CurrentTitle}" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0"/>
            </Panel>
        </Border>
        <Panel>
            <ContentControl Classes="contentContainer" Content="{Binding CurrentView}" IsVisible="{Binding CanGoHome}"/>
            <v:HomePageView IsVisible="{Binding !CanGoHome}"/>
        </Panel>
    </DockPanel>
  <!--UserControl.Styles>
      <Style Selector="ContentControl.contentContainer">
          <Setter Property="RenderTransform">
              <ScaleTransform/>
          </Setter>
          <Setter Property="RenderTransformOrigin" Value="50%,50%"/>
          <Setter Property="Opacity" Value="1.0"/>
      </Style>
      <Style Selector="ContentControl.contentContainer:not(:disabled)">
          <Style.Animations>
            <Animation Duration="0:0:0.125" FillMode="Forward">
                <KeyFrame Cue="0%">
                    <Setter Property="Opacity" Value="0.0"/>
                    <Setter Property="ScaleTransform.ScaleX" Value="0.75"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="0.75"/>
                </KeyFrame>
                <KeyFrame Cue="100%">
                    <Setter Property="Opacity" Value="1.0"/>
                    <Setter Property="ScaleTransform.ScaleX" Value="1.0"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="1.0"/>
                </KeyFrame>
            </Animation>
          </Style.Animations>
      </Style>
      <Style Selector="ContentControl.contentContainer:disabled">
          <Style.Animations>
            <Animation Duration="0:0:0.125" FillMode="Forward">
                <KeyFrame Cue="0%">
                    <Setter Property="Opacity" Value="1.0"/>
                    <Setter Property="ScaleTransform.ScaleX" Value="1.0"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="1.0"/>
                </KeyFrame>
                <KeyFrame Cue="100%">
                    <Setter Property="Opacity" Value="0.0"/>
                    <Setter Property="ScaleTransform.ScaleX" Value="0.75"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="0.75"/>
                </KeyFrame>
            </Animation>
          </Style.Animations>
      </Style-->
      <!--Style Selector="ContentControl.contentContainer">
        <Setter Property="IsVisible" Value="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"/>
      </Style>

      <Style Selector=":is(v|HomePageView)">
          <Setter Property="RenderTransform">
              <ScaleTransform/>
          </Setter>
          <Setter Property="RenderTransformOrigin" Value="50%,50%"/>
          <Setter Property="Opacity" Value="1.0"/>
      </Style>
      <Style Selector=":is(v|HomePageView):not(:disabled)">
          <Style.Animations>
            <Animation Duration="0:0:0.125" FillMode="Forward">
                <KeyFrame Cue="0%">
                    <Setter Property="Opacity" Value="0.0"/>
                    <Setter Property="ScaleTransform.ScaleX" Value="1.25"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="1.25"/>
                </KeyFrame>
                <KeyFrame Cue="100%">
                    <Setter Property="Opacity" Value="1.0"/>
                    <Setter Property="ScaleTransform.ScaleX" Value="1.0"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="1.0"/>
                </KeyFrame>
            </Animation>
          </Style.Animations>
      </Style>
      <Style Selector=":is(v|HomePageView):disabled">
          <Style.Animations>
            <Animation Duration="0:0:0.125" FillMode="Backward">
                <KeyFrame Cue="0%">
                    <Setter Property="Opacity" Value="1.0"/>
                    <Setter Property="ScaleTransform.ScaleX" Value="1.0"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="1.0"/>
                </KeyFrame>
                <KeyFrame Cue="100%">
                    <Setter Property="Opacity" Value="0.0"/>
                    <Setter Property="ScaleTransform.ScaleX" Value="1.25"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="1.25"/>
                </KeyFrame>
            </Animation>
          </Style.Animations>
      </Style>
  </UserControl.Styles-->
</UserControl>
