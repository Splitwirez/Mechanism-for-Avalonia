<Styles xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:mectrl="clr-namespace:Mechanism.AvaloniaUI.Controls;assembly=Mechanism.AvaloniaUI"
             xmlns:meconv="clr-namespace:Mechanism.AvaloniaUI.Converters;assembly=Mechanism.AvaloniaUI"
             xmlns:mebb="clr-namespace:Mechanism.AvaloniaUI.Controls.BlenderBar;assembly=Mechanism.AvaloniaUI"
             xmlns:mecore="clr-namespace:Mechanism.AvaloniaUI.Core;assembly=Mechanism.AvaloniaUI">
  <Styles.Resources>
    <meconv:ItemCountToHasItemsBooleanConverter x:Key="ItemCountToHasItemsBooleanConverter"/>
    <mecore:BorderPresenceToThicknessesConverter x:Key="BorderPresenceToThicknessesConverter"/>
    <mecore:CornerCurvesToCornerRadiiConverter x:Key="CornerCurvesToCornerRadiiConverter"/>
  </Styles.Resources>
  <Style Selector="mebb|BlenderBar">
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
    <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
    <Setter Property="BorderThickness" Value="{DynamicResource ListBoxBorderThemeThickness}" />
    <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
    <Setter Property="Padding" Value="3"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Border x:Name="RootBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
          <Panel>
            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
              <ItemsPresenter x:Name="PART_ItemsPresenter" Items="{TemplateBinding Items}" Margin="{TemplateBinding Padding}">
                <ItemsPresenter.ItemsPanel>
                  <ItemsPanelTemplate>
                    <mebb:BlenderBarPanel IconsOnlyItemWidth="{TemplateBinding IconsOnlyItemWidth}" ItemHeight="{TemplateBinding ItemHeight}" BarMode="{Binding BarMode, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                  </ItemsPanelTemplate>
                </ItemsPresenter.ItemsPanel>
              </ItemsPresenter>
            </ScrollViewer>
            <Thumb x:Name="PART_BarModeThumb" Width="4" HorizontalAlignment="Right" Cursor="SizeWestEast">
              <Thumb.Template>
                <ControlTemplate>
                  <Rectangle Fill="#01000000"/>
                </ControlTemplate>
              </Thumb.Template>
            </Thumb>
          </Panel>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>

  <Style Selector="mebb|BlenderBarItem">
    <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
    <Setter Property="Padding" Value="5,4"/>
    <Setter Property="mecore:AttachedIcon.IconGap" Value="6"/>
    <Setter Property="Height" Value="{Binding $parent[mebb:BlenderBar].ItemHeight}"/>
    <Setter Property="TextBlock.TextAlignment" Value="Left"/>  
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
    <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThemeThickness}" />
    <!--Setter Property="RenderTransform" Value="none" />
    <Setter Property="Transitions">
      <Transitions>
        <TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
      </Transitions>
    </Setter-->
    <Setter Property="Template">
      <ControlTemplate>
          <Border Name="selectionBorder" Focusable="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" TextBlock.Foreground="{TemplateBinding Foreground}" Padding="0" BorderThickness="0"
          CornerRadius="{Binding Path=(mecore:CornerCurves.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiiConverter}, ConverterParameter='3;0'}"
          TemplatedControl.IsTemplateFocusTarget="True">
          <!--BorderThickness="{Binding Path=(mecore:BorderPresence.BorderPresence), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BorderPresenceToThicknessesConverter}, ConverterParameter='5;0'}"-->
            <Panel Background="#01000000">
              <DockPanel x:Name="ContentIconPanel" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}">
                <TemplatedControl x:Name="PART_IconPresenter" Template="{Binding (mecore:AttachedIcon.Icon), RelativeSource={RelativeSource Mode=TemplatedParent}}" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                <Rectangle x:Name="IconGapRect" DockPanel.Dock="Left" Width="{Binding (mecore:AttachedIcon.IconGap), RelativeSource={RelativeSource Mode=TemplatedParent}}">
                  <Rectangle.IsVisible>
                    <MultiBinding ConverterParameter="All">
                      <MultiBinding.Converter>
                        <meconv:BoolsToBoolConverter/>
                      </MultiBinding.Converter>
                      <MultiBinding.Bindings>
                        <Binding Path="Header" RelativeSource="{RelativeSource Mode=TemplatedParent}" Converter="{x:Static ObjectConverters.IsNotNull}"/>
                        <Binding Path="(mecore:AttachedIcon.Icon)" RelativeSource="{RelativeSource Mode=TemplatedParent}" Converter="{x:Static ObjectConverters.IsNotNull}"/>
                      </MultiBinding.Bindings>
                    </MultiBinding>
                  </Rectangle.IsVisible>
                </Rectangle>
                <ContentPresenter x:Name="PART_HeaderPresenter" TextBlock.TextAlignment="{Binding Path=(TextBlock.TextAlignment), RelativeSource={RelativeSource Mode=TemplatedParent}}" Focusable="False" Content="{TemplateBinding Header}" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
              </DockPanel>
              <DockPanel x:Name="SelectedContentIconPanel" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}" IsVisible="{Binding !#ContentIconPanel.IsVisible}">
                <TemplatedControl Template="{Binding Path=LastSelectedItem.(mecore:AttachedIcon.Icon), RelativeSource={RelativeSource Mode=TemplatedParent}}" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                <Rectangle DockPanel.Dock="Left" Width="{Binding Width, ElementName=IconGapRect}">
                  <Rectangle.IsVisible>
                    <MultiBinding ConverterParameter="All">
                      <MultiBinding.Converter>
                        <meconv:BoolsToBoolConverter/>
                      </MultiBinding.Converter>
                      <MultiBinding.Bindings>
                        <Binding Path="Header" Source="{Binding Path=LastSelectedItem, RelativeSource={RelativeSource Mode=TemplatedParent}}" Converter="{x:Static ObjectConverters.IsNotNull}"/>
                        <Binding Path="(mecore:AttachedIcon.Icon)" Source="{Binding Path=LastSelectedItem, RelativeSource={RelativeSource Mode=TemplatedParent}}" Converter="{x:Static ObjectConverters.IsNotNull}"/>
                      </MultiBinding.Bindings>
                    </MultiBinding>
                  </Rectangle.IsVisible>
                </Rectangle>
                <ContentPresenter TextBlock.TextAlignment="{Binding Path=LastSelectedItem.(TextBlock.TextAlignment), RelativeSource={RelativeSource Mode=TemplatedParent}}" Focusable="False" Content="{Binding Path=LastSelectedItem.Header, RelativeSource={RelativeSource Mode=TemplatedParent}}}" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
              </DockPanel>
              <Path Data="M 4 0 L 4 4 L 0 4 Z" Fill="{Binding #selectionBorder.(TextBlock.Foreground)}" HorizontalAlignment="Right" VerticalAlignment="Bottom" DockPanel.Dock="Right" IsVisible="{TemplateBinding ItemCount, Converter={StaticResource ItemCountToHasItemsBooleanConverter}}" Margin="2"/>
              <Popup x:Name="PART_ItemsPopup" PlacementMode="Bottom" StaysOpen="False">
                <Border Background="{DynamicResource ComboBoxDropDownBackground}" BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}" BorderThickness="{DynamicResource ComboBoxDropdownBorderThickness}" CornerRadius="0,0,3,3" Padding="-1">
                  <ItemsPresenter x:Name="PART_ItemsPresenter" Items="{TemplateBinding Items}" ItemsPanel="{TemplateBinding ItemsPanel}"/>
                </Border>
              </Popup>
            </Panel>
          </Border>
      </ControlTemplate>
    </Setter>
  </Style>
  <Style Selector="mebb|BlenderBar > mebb|BlenderBarItem">
    <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
  </Style>
  <!--Style Selector="mebb|BlenderBarItem:pressed">
    <Setter Property="RenderTransform" Value="scale(0.98)" />    
  </Style-->
  <Style Selector="mebb|BlenderBarItem:pressed /template/ Border#selectionBorder,
                  mebb|BlenderBarItem:selected /template/ Border#selectionBorder,
                   mebb|BlenderBarItem[AnyChildSelected=True] /template/ Border#selectionBorder">
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundPressed}" />
  </Style>
  <Style Selector="mebb|BlenderBarItem:pressed /template/ Border#selectionBorder,
                  mebb|BlenderBarItem:selected /template/ Border#selectionBorder,
                   mebb|BlenderBarItem[AnyChildSelected=True] /template/ Border#selectionBorder">
    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPressed}" />
  </Style>
  <Style Selector="mebb|BlenderBarItem:pointerover /template/ Border#selectionBorder">
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
  </Style>
  <Style Selector="mebb|BlenderBarItem:pointerover /template/ Border#selectionBorder">
    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPointerOver}" />
  </Style>
  <Style Selector="mebb|BlenderBarItem:disabled /template/ Border#selectionBorder">
    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushDisabled}" />
  </Style>
  <Style Selector="mebb|BlenderBarItem:disabled /template/ Border#selectionBorder">
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundDisabled}" />
  </Style>

  <Style Selector="mebb|BlenderBarItem.accent,
                  mebb|BlenderBar.accent > mebb|BlenderBarItem">
    <Setter Property="Background" Value="{DynamicResource AccentButtonBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource AccentButtonBorderBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource AccentButtonForeground}" />
  </Style>
  <Style Selector="mebb|BlenderBarItem.accent /template/ Border#selectionBorder,
                  mebb|BlenderBar.accent > mebb|BlenderBarItem /template/ Border#selectionBorder">
  </Style>

  <Style Selector="mebb|BlenderBarItem.accent:pointerover,
                  mebb|BlenderBar.accent > mebb|BlenderBarItem:pointerover">
  </Style>
  <Style Selector="mebb|BlenderBarItem.accent:pointerover /template/ Border#selectionBorder,
                  mebb|BlenderBar.accent > mebb|BlenderBarItem:pointerover /template/ Border#selectionBorder">
    <Setter Property="Background" Value="{DynamicResource AccentButtonBackgroundPointerOver}" />
    <Setter Property="BorderBrush" Value="{DynamicResource AccentButtonBorderBrushPointerOver}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource AccentButtonForegroundPointerOver}" />
  </Style>

  <Style Selector="mebb|BlenderBarItem.accent:pressed,
                  mebb|BlenderBar.accent > mebb|BlenderBarItem:pressed">
  </Style>
  <Style Selector="mebb|BlenderBarItem.accent:pressed /template/ Border#selectionBorder,
                  mebb|BlenderBar.accent > mebb|BlenderBarItem:pressed /template/ Border#selectionBorder">
    <Setter Property="Background" Value="{DynamicResource AccentButtonBackgroundPressed}" />
    <Setter Property="BorderBrush" Value="{DynamicResource AccentButtonBorderBrushPressed}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource AccentButtonForegroundPressed}" />
  </Style>

  <Style Selector="mebb|BlenderBarItem.accent:disabled,
                  mebb|BlenderBar.accent > mebb|BlenderBarItem:disabled">
  </Style>
  <Style Selector="mebb|BlenderBarItem.accent:disabled /template/ Border#selectionBorder,
                  mebb|BlenderBar.accent > mebb|BlenderBarItem:disabled /template/ Border#selectionBorder">
    <Setter Property="Background" Value="{DynamicResource AccentButtonBackgroundDisabled}" />
    <Setter Property="BorderBrush" Value="{DynamicResource AccentButtonBorderBrushDisabled}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource AccentButtonForegroundDisabled}" />
  </Style>

  <Style Selector="mebb|BlenderBarItem:not(mebb|BlenderBarItem[ItemCount=0]) /template/ DockPanel#ContentIconPanel">
    <Setter Property="IsVisible" Value="False"/>
  </Style>
  <Style Selector="mebb|BlenderBar[BarMode=Labels] > mebb|BlenderBarItem">
    <Setter Property="Width" Value="{Binding $parent[mebb:BlenderBar].LabelledWidth}"/>
  </Style>
  <Style Selector="mebb|BlenderBar[BarMode=Labels] > mebb|BlenderBarItem /template/ DockPanel#ContentIconPanel">
    <Setter Property="HorizontalAlignment" Value="Stretch"/>
  </Style>
  <Style Selector="mebb|BlenderBar:not(mebb|BlenderBar[BarMode=Labels]) > mebb|BlenderBarItem /template/ DockPanel#ContentIconPanel">
    <Setter Property="HorizontalAlignment" Value="Center"/>
  </Style>
  <Style Selector="mebb|BlenderBar:not(mebb|BlenderBar[BarMode=Labels]) > mebb|BlenderBarItem">
    <Setter Property="Width" Value="{Binding $parent[mebb:BlenderBar].IconsOnlyItemWidth}"/>
    <Setter Property="ToolTip.Tip" Value="{Binding Header, RelativeSource={RelativeSource Mode=Self}}"/>
  </Style>
  <Style Selector="mebb|BlenderBar[BarMode=IconsSingleColumn] > mebb|BlenderBarItem /template/ ContentPresenter#PART_HeaderPresenter,
                   mebb|BlenderBar[BarMode=IconsSingleColumn] > mebb|BlenderBarItem /template/ Rectangle#IconGapRect">
    <Setter Property="IsVisible" Value="False"/>
  </Style>
  <Style Selector="mebb|BlenderBar[BarMode=IconsDoubleColumn] > mebb|BlenderBarItem /template/ ContentPresenter#PART_HeaderPresenter,
                   mebb|BlenderBar[BarMode=IconsDoubleColumn] > mebb|BlenderBarItem /template/ Rectangle#IconGapRect">
    <Setter Property="IsVisible" Value="False"/>
  </Style>
    <Style Selector="mebb|BlenderBarItem mebb|BlenderBarItem">
    <Setter Property="MinWidth" Value="{Binding $parent[mebb:BlenderBar].LabelledWidth}"/>
  </Style>
</Styles>