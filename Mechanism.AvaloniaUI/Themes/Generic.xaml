<Styles xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:mectrl="clr-namespace:Mechanism.AvaloniaUI.Controls;assembly=Mechanism.AvaloniaUI"
             xmlns:meconv="clr-namespace:Mechanism.AvaloniaUI.Converters;assembly=Mechanism.AvaloniaUI"
             xmlns:metb="clr-namespace:Mechanism.AvaloniaUI.Controls.ToolBar;assembly=Mechanism.AvaloniaUI"
             xmlns:mets="clr-namespace:Mechanism.AvaloniaUI.Controls.ToolStrip;assembly=Mechanism.AvaloniaUI"
             xmlns:mecb="clr-namespace:Mechanism.AvaloniaUI.Controls.CommandBar;assembly=Mechanism.AvaloniaUI"
             xmlns:mecd="clr-namespace:Mechanism.AvaloniaUI.Controls.ContentDialog;assembly=Mechanism.AvaloniaUI"
             xmlns:mecore="clr-namespace:Mechanism.AvaloniaUI.Core;assembly=Mechanism.AvaloniaUI">
  <Design.PreviewWith>
    <HeaderedContentControl Classes="GroupBox"  Header="Header">
      <StackPanel Orientation="Vertical">
        <TextBlock Text="Content content content"/>
        <TextBlock Text="Content content content"/>
        <TextBlock Text="Content content content"/>
        <TextBlock Text="Content content content"/>
      </StackPanel>
    </HeaderedContentControl>
  </Design.PreviewWith>
  <Styles.Resources>
    <ControlTemplate x:Key="EmbeddedFlyoutButtonTemplate">
      <Panel x:Name="PART_ButtonArea">
        <Border x:Name="BackgroundBorder" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource Mode=TemplatedParent}}">
          <Path Data="M 0 0 L 4 4 L 0 8 Z" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{Binding Padding, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        </Border>
        <Popup x:Name="PART_Flyout" IsOpen="{Binding IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" StaysOpen="False" MinWidth="1" MinHeight="1" PlacementMode="Right" PlacementTarget="{Binding #BackgroundBorder}">
          <ContentPresenter Name="PART_FlyoutContentPresenter" Background="{DynamicResource ThemeBackgroundBrush}" BorderBrush="{DynamicResource ThemeBorderMidBrush}" BorderThickness="{DynamicResource ThemeBorderThickness}" ContentTemplate="{Binding FlyoutContentTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" Content="{Binding FlyoutContent, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextBlock.Foreground="{DynamicResource ThemeForegroundBrush}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
        </Popup>
      </Panel>
    </ControlTemplate>
  </Styles.Resources>
  <StyleInclude Source="avares://Mechanism.AvaloniaUI/Themes/Controls/Buttons.xaml"/>
  <StyleInclude Source="avares://Mechanism.AvaloniaUI/Themes/Controls/CommandBar.xaml"/>
  <StyleInclude Source="avares://Mechanism.AvaloniaUI/Themes/Controls/ContentDialog.xaml"/>
  <StyleInclude Source="avares://Mechanism.AvaloniaUI/Themes/Controls/ToolBarTray.xaml"/>
  <StyleInclude Source="avares://Mechanism.AvaloniaUI/Themes/Controls/ToolStrip.xaml"/>
  <StyleInclude Source="avares://Mechanism.AvaloniaUI/Themes/Controls/SwipeSheet.xaml"/>


  <Style Selector=":is(TopLevel)">
    <Setter Property="mecd:ContentDialog.MonitorActive" Value="True"/>
  </Style>
  <Style Selector="mectrl|OverflowFlyoutItemsControl">
    <Setter Property="BaseWidth" Value="9"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
          <Panel Name="RootPanel">
            <DockPanel>
              <Panel Width="15" DockPanel.Dock="Right">
                <ToggleButton x:Name="PART_FlyoutToggleButton" BorderThickness="0" HorizontalAlignment="Stretch" IsVisible="{TemplateBinding HasFlyoutItems}" IsChecked="{Binding $parent[mectrl:OverflowFlyoutItemsControl].IsFlyoutOpen, Mode=TwoWay}">
                  <StackPanel Orientation="Horizontal" Spacing="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <StackPanel.RenderTransform>
                      <TranslateTransform X="-1"/>
                    </StackPanel.RenderTransform>
                    <Path Data="M0,0 L0,3 1.5,4.5 0,6 0,9 4.5,4.5 z" Fill="{Binding $parent[ToggleButton].Foreground}" StrokeThickness="0"/>
                    <Path Data="M0,0 L0,3 1.5,4.5 0,6 0,9 4.5,4.5 z" Fill="{Binding $parent[ToggleButton].Foreground}" StrokeThickness="0"/>
                    <!--Path Data="M 0 0 L 3 3 L 0 6 L 2 6 L 5 3 L 2 0 Z" Fill="{Binding $parent[ToggleButton].Foreground}" StrokeThickness="0"/-->
                    <!--Path Data="M 0 0 L 3 3 L 0 6" Stroke="{Binding $parent[ToggleButton].Foreground}" StrokeThickness="2"/-->
                  </StackPanel>
                </ToggleButton>
              </Panel>
              <ItemsControl x:Name="PART_VisibleItemsPresenter" Items="{TemplateBinding VisibleItems}" ItemsPanel="{TemplateBinding ItemsPanel}" Margin="{TemplateBinding Padding}"/>
              <!--ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                    <mectrl:NoSizeStackPanel Orientation="Horizontal" ClipToBounds="True"/>
                  </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
              </ItemsControl-->
            </DockPanel>
            <Popup x:Name="PART_Flyout" PlacementMode="Bottom" PlacementTarget="{Binding ElementName=PART_FlyoutToggleButton}" IsOpen="{Binding $parent[mectrl:OverflowFlyoutItemsControl].IsFlyoutOpen, Mode=TwoWay}" MinHeight="{TemplateBinding MinHeight}" StaysOpen="False">
              <!--IsOpen="{Binding Path=IsChecked, ElementName=PART_FlyoutToggleButton, Mode=TwoWay}"-->
              <Border Background="{DynamicResource ThemeBackgroundBrush}" BorderBrush="{DynamicResource ThemeBorderMidBrush}" BorderThickness="{DynamicResource ThemeBorderThickness}">
                <ItemsControl x:Name="PART_FlyoutItemsPresenter" Items="{TemplateBinding FlyoutItems}" ItemsPanel="{TemplateBinding FlyoutItemsPanel}"/>
              </Border>
            </Popup>
          </Panel>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>
  <Style Selector="mectrl|OverflowFlyoutItemsControl /template/ ToggleButton#PART_FlyoutToggleButton:not(:pointerover):not(:pressed)">
    <Setter Property="Background" Value="Transparent"/>
  </Style>

  <Style Selector="HeaderedContentControl.GroupBox">
    <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderMidBrush}"/>
    <Setter Property="BorderThickness" Value="{DynamicResource ThemeBorderThickness}"/>
    <Setter Property="Padding" Value="4"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Border Margin="0,9,0,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1">
          <DockPanel>
            <DockPanel DockPanel.Dock="Top" Margin="0,-9,0,-3">
              <Rectangle Width="5" Height="1" Fill="{TemplateBinding BorderBrush}" DockPanel.Dock="Left" VerticalAlignment="Top" Margin="0,9,0,0"/>
              <ContentPresenter Content="{TemplateBinding Header}" Margin="4,0" DockPanel.Dock="Left"/>
              <Rectangle Height="1" Fill="{TemplateBinding BorderBrush}" VerticalAlignment="Top" Margin="0,9,0,0"/>
            </DockPanel>
            <ContentPresenter Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
          </DockPanel>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>
</Styles>